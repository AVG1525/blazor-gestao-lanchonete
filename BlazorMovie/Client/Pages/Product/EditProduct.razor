@page "/Product/EditProduct/{Item}"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Editar Produto</h3>

<EditForm Model="@product" OnValidSubmit="SubmitProductAula" @onreset="HandleReset">
    <DataAnnotationsValidator />

    <div class="form-row">
        <div class="form-group col">
            <label>Nome</label>
            <InputText @bind-Value="product.Name" class="form-control" />
            <ValidationMessage For="@(() => product.Name)" />
        </div>
        <div class="form-group col">
            <label>Preço</label>
            <InputNumber @bind-Value="product.Price" class="form-control" />
            <ValidationMessage For="@(() => product.Price)" />
        </div>
        <div class="form-group col">
            <label>Descrição</label>
            <InputText @bind-Value="product.Description" class="form-control" />
            <ValidationMessage For="@(() => product.Description)" />
        </div>
    </div>
    <div class="text-center">
        <button type="submit" class="btn btn-primary mr-1">Salvar</button>
        <button type="reset" class="btn btn-secondary">Cancelar</button>
    </div>
</EditForm>

@code {
    private Product product = new Product();
    private EditContext editContext { get; set; }

    [Parameter]
    public string Item { get; set; }


    protected override async Task OnInitializedAsync()
    {
        product = await Http.GetFromJsonAsync<Product>($"/v1/Product/ById?id={Item}");
        editContext = new EditContext(product);
    }

    private async Task SubmitProductAula()
    {
        await Http.PutAsJsonAsync("/v1/Product", product);
        NavigationManager.NavigateTo("Product/ListProduct");

    }

    private void HandleReset()
    {
        product = new Product();
        editContext = new EditContext(product);
    }



}
