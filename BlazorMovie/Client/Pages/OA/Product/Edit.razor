@page "/OA/Product/Edit/{Item}"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Editar Produto</h3>

<EditForm Model="@product" OnValidSubmit="SubmitProduct" @onreset="HandleReset">
    <DataAnnotationsValidator />
    <div class="form-group">
        <br />
        <div class="row col-12">
            <div class="col-5">
                <label>Nome</label>
                <InputText class="form-control" @bind-Value="@product.Name"></InputText>
                <ValidationMessage For="@(() => product.Name)"></ValidationMessage>
            </div>
            <div class="col-3">
                <label>Preço</label>
                <InputNumber @bind-Value="product.Price" class="form-control" />
                <ValidationMessage For="@(() => product.Price)" />
            </div>
            <div class="col-4">
                <label>Descrição</label>
                <select class="form-control" @bind="product.ProductDescriptionOAId">
                    <option value="">Selecione...</option>
                    @foreach (var opt in productDescriptions)
                    {
                        <option value="@opt.Id">@opt.Description</option>
                    }
                </select>
                <ValidationMessage For="@(() => product.ProductDescriptionOAId)"></ValidationMessage>
            </div>
        </div>
        <div class="row col-12 d-flex justify-content-center">
            <button class="btn btn-success" type="submit" style="margin-right:10px;">Salvar</button>
            <button class="btn btn-secondary" type="reset">Cancelar</button>
        </div>
    </div>
</EditForm>

@code {
    private string URL = "/v1/OA/ProductOA";
    private string URL_DESC = "/v1/OA/ProductDescriptionOA";
    private ProductOA product = new ProductOA();
    private EditContext editContext;
    private List<ProductDescriptionOA> productDescriptions = new List<ProductDescriptionOA>();

    [Parameter]
    public string Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        productDescriptions = await Http.GetFromJsonAsync<List<ProductDescriptionOA>>(URL_DESC);

        product = await Http.GetFromJsonAsync<ProductOA>($"{URL}/ById?id={Item}");
        editContext = new EditContext(product);
    }

    private async Task SubmitProduct()
    {
        await Http.PutAsJsonAsync(URL, product);
        NavigationManager.NavigateTo("OA/Products");
    }

    private void HandleReset()
    {
        product = new ProductOA();
        editContext = new EditContext(product);
        NavigationManager.NavigateTo("OA/Products");
    }
}