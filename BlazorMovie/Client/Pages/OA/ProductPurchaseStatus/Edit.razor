@page "/OA/ProductPurchaseStatus/Edit/{Item}"
@using System.Net.Http
@inject HttpClient Http
@inject NavigationManager NavigationManager


<h3>Editar Status de Compra</h3>

<EditForm Model="@productsPurchaseStatus" OnValidSubmit="SubmitProductsPurchaseStatus" @onreset="HandleReset">
    <DataAnnotationsValidator />
    <div class="form-group">
        <br />
        <div class="row col-12">
            <div class="col-5">
                <label>Descrição</label>
                <InputText class="form-control" @bind-Value="@productsPurchaseStatus.Description"></InputText>
                <ValidationMessage For="@(() => productsPurchaseStatus.Description)"></ValidationMessage>
            </div>
        </div>
        <div class="row col-12 d-flex justify-content-center">
            <button class="btn btn-success" type="submit" style="margin-right:10px;">Salvar</button>
            <button class="btn btn-secondary" type="reset">Cancelar</button>
        </div>
    </div>
</EditForm>

@code {
    private string URL = "/v1/OA/ProductPurchaseStatusOA";
    private ProductPurchaseStatusOA productsPurchaseStatus = new ProductPurchaseStatusOA();
    private EditContext editContext { get; set; }

    [Parameter]
    public string Item { get; set; }

    protected override async Task OnInitializedAsync()
    {
        productsPurchaseStatus = await Http.GetFromJsonAsync<ProductPurchaseStatusOA>($"{URL}/ById?id={Item}");
        editContext = new EditContext(productsPurchaseStatus);
    }

    private async Task SubmitProductsPurchaseStatus()
    {
        await Http.PutAsJsonAsync(URL, productsPurchaseStatus);
        NavigationManager.NavigateTo("OA/ProductsPurchaseStatus");
    }

    private void HandleReset()
    {
        productsPurchaseStatus = new ProductPurchaseStatusOA();
        editContext = new EditContext(productsPurchaseStatus);
        NavigationManager.NavigateTo("OA/ProductsPurchaseStatus");
    }
}
