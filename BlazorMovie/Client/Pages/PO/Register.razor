@page "/PO/Register"
@inject IAuthService authService;
@inject NavigationManager NavigationManager

<EditForm Model="@register" OnValidSubmit="SubmitUserPO" @onreset="HandleReset">
    <div class="card-body myalign" style="margin-top: 10em;">
        @*<div class="col-5"></div>*@
        <div>
            <div class="d-flex">
                <span class="oi oi-person myicon" aria-hidden="true"></span>

                <InputText class="form-control" Placeholder="Digite seu usuario" @bind-Value="@register.Username"></InputText>
            </div>
            <div class="d-flex">
                <span class="oi oi-lock-locked myicon" aria-hidden="true"></span>
                <InputText class="form-control" Placeholder="Digite sua senha" @bind-Value="@register.Password"></InputText>
            </div>
            <br />
            <div class="myalign">
                <button class="btn btn-success" type="submit" style="margin-right:10px;">Registrar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    //private string URL = "/v1/PO/Login";
    private LoginPO register = new LoginPO();
    private EditContext editContext;

    private async Task SubmitUserPO()
    {
        var result = await authService.Register(register);
        Console.WriteLine(System.Text.Json.JsonSerializer.Serialize(result));

        NavigationManager.NavigateTo("PO/Login");

    }

    private void HandleReset()
    {
        register = new LoginPO();
        editContext = new EditContext(register);
        NavigationManager.NavigateTo("PO/Register");
    }
}

<style>
    .myalign {
        display: flex;
        justify-content: center;
    }

    .myicon {
        margin: auto;
        padding: 0.50em;
        font-size: 1.1rem;
    }
</style>