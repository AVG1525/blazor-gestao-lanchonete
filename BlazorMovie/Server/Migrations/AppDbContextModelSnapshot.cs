// <auto-generated />
using System;
using BlazorMovie.Server.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlazorMovie.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BlazorMovie.Shared.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.ProductDescriptionOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ProductDescriptionOA");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.ProductOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("ProductDescriptionOAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductDescriptionOAId");

                    b.ToTable("ProductOA");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.ProductPurchaseStatusOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ProductPurchaseStatusOA");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.SaleOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductOAId")
                        .HasColumnType("int");

                    b.Property<int>("ProductPurchaseStatusOAId")
                        .HasColumnType("int");

                    b.Property<int>("UserOAId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductOAId");

                    b.HasIndex("ProductPurchaseStatusOAId");

                    b.HasIndex("UserOAId");

                    b.ToTable("SaleOA");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.UserOA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telephone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("UserOA");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.RegisterModel", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Key");

                    b.ToTable("User");
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.ProductOA", b =>
                {
                    b.HasOne("BlazorMovie.Shared.Model.OA.ProductDescriptionOA", "ProductDescriptionOA")
                        .WithMany("ProductOA")
                        .HasForeignKey("ProductDescriptionOAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.OA.SaleOA", b =>
                {
                    b.HasOne("BlazorMovie.Shared.Model.OA.ProductOA", "ProductOA")
                        .WithMany("SaleOA")
                        .HasForeignKey("ProductOAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorMovie.Shared.Model.OA.ProductPurchaseStatusOA", "ProductPurchaseStatusOA")
                        .WithMany("SaleOA")
                        .HasForeignKey("ProductPurchaseStatusOAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorMovie.Shared.Model.OA.UserOA", "UserOA")
                        .WithMany("SaleOA")
                        .HasForeignKey("UserOAId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BlazorMovie.Shared.Model.Product", b =>
                {
                    b.HasOne("BlazorMovie.Shared.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
